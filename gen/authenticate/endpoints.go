// Code generated by goa v3.10.1, DO NOT EDIT.
//
// authenticate endpoints
//
// Command:
// $ goa gen auth/design

package authenticate

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "authenticate" service endpoints.
type Endpoints struct {
	Authenticate goa.Endpoint
}

// NewEndpoints wraps the methods of the "authenticate" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Authenticate: NewAuthenticateEndpoint(s),
	}
}

// Use applies the given middleware to all the "authenticate" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Authenticate = m(e.Authenticate)
}

// NewAuthenticateEndpoint returns an endpoint function that calls the method
// "authenticate" of service "authenticate".
func NewAuthenticateEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*InputAuth)
		return s.Authenticate(ctx, p)
	}
}
