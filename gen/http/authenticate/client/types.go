// Code generated by goa v3.10.1, DO NOT EDIT.
//
// authenticate HTTP client types
//
// Command:
// $ goa gen auth/design

package client

import (
	authenticate "auth/gen/authenticate"

	goa "goa.design/goa/v3/pkg"
)

// AuthenticateRequestBody is the type of the "authenticate" service
// "authenticate" endpoint HTTP request body.
type AuthenticateRequestBody struct {
	// A valid login name
	Login string `form:"login" json:"login" xml:"login"`
	// A valid password
	Password string `form:"password" json:"password" xml:"password"`
	// privacyAccepted
	PrivacyAccepted *bool `form:"privacyAccepted,omitempty" json:"privacyAccepted,omitempty" xml:"privacyAccepted,omitempty"`
	// uuid
	UUID *string `form:"uuid,omitempty" json:"uuid,omitempty" xml:"uuid,omitempty"`
}

// AuthenticateResponseBody is the type of the "authenticate" service
// "authenticate" endpoint HTTP response body.
type AuthenticateResponseBody struct {
	// login
	Login *string `form:"login,omitempty" json:"login,omitempty" xml:"login,omitempty"`
	// refreshToken
	RefreshToken *string `form:"refreshToken,omitempty" json:"refreshToken,omitempty" xml:"refreshToken,omitempty"`
	// providerToken
	ProviderToken *string `form:"providerToken,omitempty" json:"providerToken,omitempty" xml:"providerToken,omitempty"`
	// subscriber
	Subscriber *int `form:"subscriber,omitempty" json:"subscriber,omitempty" xml:"subscriber,omitempty"`
	// people
	People *string `form:"people,omitempty" json:"people,omitempty" xml:"people,omitempty"`
	// locale
	Locale *string `form:"locale,omitempty" json:"locale,omitempty" xml:"locale,omitempty"`
}

// AuthenticateBadrequestResponseBody is the type of the "authenticate" service
// "authenticate" endpoint HTTP response body for the "badrequest" error.
type AuthenticateBadrequestResponseBody struct {
	// message status
	Status *int `form:"status,omitempty" json:"status,omitempty" xml:"status,omitempty"`
	// message
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
	// Name of the error
	Exception *string `form:"exception,omitempty" json:"exception,omitempty" xml:"exception,omitempty"`
}

// AuthenticateUnauthorizedResponseBody is the type of the "authenticate"
// service "authenticate" endpoint HTTP response body for the "unauthorized"
// error.
type AuthenticateUnauthorizedResponseBody struct {
	// message status
	Status *int `form:"status,omitempty" json:"status,omitempty" xml:"status,omitempty"`
	// message
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
	// Name of the error
	Exception *string `form:"exception,omitempty" json:"exception,omitempty" xml:"exception,omitempty"`
}

// AuthenticateInternalservererrorResponseBody is the type of the
// "authenticate" service "authenticate" endpoint HTTP response body for the
// "internalservererror" error.
type AuthenticateInternalservererrorResponseBody struct {
	// message status
	Status *int `form:"status,omitempty" json:"status,omitempty" xml:"status,omitempty"`
	// message
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
	// Name of the error
	Exception *string `form:"exception,omitempty" json:"exception,omitempty" xml:"exception,omitempty"`
}

// NewAuthenticateRequestBody builds the HTTP request body from the payload of
// the "authenticate" endpoint of the "authenticate" service.
func NewAuthenticateRequestBody(p *authenticate.InputAuth) *AuthenticateRequestBody {
	body := &AuthenticateRequestBody{
		Login:           p.Login,
		Password:        p.Password,
		PrivacyAccepted: p.PrivacyAccepted,
		UUID:            p.UUID,
	}
	return body
}

// NewAuthenticateOutputAuthOK builds a "authenticate" service "authenticate"
// endpoint result from a HTTP "OK" response.
func NewAuthenticateOutputAuthOK(body *AuthenticateResponseBody) *authenticate.OutputAuth {
	v := &authenticate.OutputAuth{
		Login:         *body.Login,
		RefreshToken:  *body.RefreshToken,
		ProviderToken: body.ProviderToken,
		Subscriber:    *body.Subscriber,
		People:        body.People,
		Locale:        body.Locale,
	}

	return v
}

// NewAuthenticateBadrequest builds a authenticate service authenticate
// endpoint badrequest error.
func NewAuthenticateBadrequest(body *AuthenticateBadrequestResponseBody) *authenticate.TextMessage {
	v := &authenticate.TextMessage{
		Status:    *body.Status,
		Message:   *body.Message,
		Exception: *body.Exception,
	}

	return v
}

// NewAuthenticateUnauthorized builds a authenticate service authenticate
// endpoint unauthorized error.
func NewAuthenticateUnauthorized(body *AuthenticateUnauthorizedResponseBody) *authenticate.TextMessage {
	v := &authenticate.TextMessage{
		Status:    *body.Status,
		Message:   *body.Message,
		Exception: *body.Exception,
	}

	return v
}

// NewAuthenticateInternalservererror builds a authenticate service
// authenticate endpoint internalservererror error.
func NewAuthenticateInternalservererror(body *AuthenticateInternalservererrorResponseBody) *authenticate.TextMessage {
	v := &authenticate.TextMessage{
		Status:    *body.Status,
		Message:   *body.Message,
		Exception: *body.Exception,
	}

	return v
}

// ValidateAuthenticateResponseBody runs the validations defined on
// AuthenticateResponseBody
func ValidateAuthenticateResponseBody(body *AuthenticateResponseBody) (err error) {
	if body.Login == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("login", "body"))
	}
	if body.RefreshToken == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("refreshToken", "body"))
	}
	if body.Subscriber == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("subscriber", "body"))
	}
	return
}

// ValidateAuthenticateBadrequestResponseBody runs the validations defined on
// authenticate_badrequest_response_body
func ValidateAuthenticateBadrequestResponseBody(body *AuthenticateBadrequestResponseBody) (err error) {
	if body.Status == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("status", "body"))
	}
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	if body.Exception == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("exception", "body"))
	}
	return
}

// ValidateAuthenticateUnauthorizedResponseBody runs the validations defined on
// authenticate_unauthorized_response_body
func ValidateAuthenticateUnauthorizedResponseBody(body *AuthenticateUnauthorizedResponseBody) (err error) {
	if body.Status == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("status", "body"))
	}
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	if body.Exception == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("exception", "body"))
	}
	return
}

// ValidateAuthenticateInternalservererrorResponseBody runs the validations
// defined on authenticate_internalservererror_response_body
func ValidateAuthenticateInternalservererrorResponseBody(body *AuthenticateInternalservererrorResponseBody) (err error) {
	if body.Status == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("status", "body"))
	}
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	if body.Exception == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("exception", "body"))
	}
	return
}
